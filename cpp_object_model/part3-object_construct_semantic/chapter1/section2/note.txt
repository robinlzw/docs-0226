结论
成员初始化列表
1. 若成员变量是一个引用类型则必须在初始化列表中初始化
2. 若成员变量是一个 const 类型则必须在初始化列表中初始化
3. 若该类继承自一个父类，且父类中仅仅拥有带有参数的构造函数，则必须在初始化列表中初始化
4. 若该类具有类类型成员变量，该类类型成员变量所指类的构造函数带有参数，则必须在初始化列表中初始化
5. 对于类类型成员变量的初始化，放在构造函数的初始化列表中进行初始化比放在构造函数中初始化效率更高

成员初始化列表说明
1. 初始化列表中的代码可看作被编译器按插入构造函数中的
2. 初始化列表中的代码在构造函数体执行之前被执行
3. 初始化列表中的成员变量的初始化顺序由变量在类中定义的顺序决定，而不是在初始化列表中出现的顺序